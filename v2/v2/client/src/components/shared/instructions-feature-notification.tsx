import { useState, useEffect } from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Book, Sparkles, X } from "lucide-react";

interface InstructionsFeatureNotificationProps {
  // –ö–æ–ª–±—ç–∫ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  onOpenInstructions?: () => void;
  // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  pageName?: string;
  // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  userId?: number;
}

export default function InstructionsFeatureNotification({
  onOpenInstructions,
  pageName = "—ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
  userId,
}: InstructionsFeatureNotificationProps) {
  const [isOpen, setIsOpen] = useState(false);

  // –ö–ª—é—á –¥–ª—è localStorage —Å —É—á–µ—Ç–æ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const storageKey = `instructionsNotificationShown_${userId || "guest"}`;

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –ª–∏ —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const hasShown = localStorage.getItem(storageKey);

    // –ï—Å–ª–∏ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –∏ –µ—Å—Ç—å userId (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
    if (!hasShown && userId) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ª—É—á—à–µ–≥–æ UX
      const timer = setTimeout(() => {
        setIsOpen(true);
      }, 1000);

      return () => clearTimeout(timer);
    }
  }, [storageKey, userId]);

  const handleClose = () => {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥ –≤ localStorage
    setIsOpen(false);
    localStorage.setItem(storageKey, "true");
  };

  const handleTryInstructions = () => {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (onOpenInstructions) {
      onOpenInstructions();
    }
    handleClose();
  };

  // –ï—Å–ª–∏ userId –Ω–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω), –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  if (!userId) {
    return null;
  }

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogContent className="max-w-md">
        <DialogHeader className="text-center">
          <div className="flex justify-center mb-4">
            <div className="relative">
              <div className="w-16 h-16 bg-gradient-to-br bg-purple-300 hover:bg-purple-400 rounded-lg flex items-center justify-center">
                <Book className="h-8 w-8" />
              </div>
              <div className="absolute -top-2 -right-6">
                <Badge className="bg-yellow-400 text-yellow-900 text-xs px-1 py-0.5 rounded-full">
                  <Sparkles className="h-3 w-3 mr-1" />
                  NEW
                </Badge>
              </div>
            </div>
          </div>
          <DialogTitle className="text-xl font-bold text-center">
            üéâ –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è!
          </DialogTitle>
          <DialogDescription className="text-center mt-2">
            –¢–µ–ø–µ—Ä—å –Ω–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å{" "}
            <strong>"–ö–Ω–∏–≥–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏"</strong>
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-4 py-4">
          <div className="text-center text-sm text-muted-foreground">
            <p className="mb-3">
              –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –¥–ª—è –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã!
            </p>

            <div className="bg-purple-50 dark:bg-purple-950/30 border border-purple-200 dark:border-purple-800 rounded-lg p-3">
              <div className="flex items-center justify-center mb-2">
                <Book className="h-5 w-5 text-purple-600 dark:text-purple-400 mr-2" />
                <span className="font-medium text-purple-800 dark:text-purple-300">
                  –ß—Ç–æ –Ω–æ–≤–æ–≥–æ?
                </span>
              </div>
              <ul className="text-xs text-purple-700 dark:text-purple-400 space-y-1">
                <li>üìä –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ</li>
                <li>üì° –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–æ–≤</li>
                <li>üìö –ì–∞–π–¥ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π</li>
                <li>üí° –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã</li>
              </ul>
            </div>

            <p className="mt-3 text-xs">
              –ò—â–∏—Ç–µ —Ñ–∏–æ–ª–µ—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É —Å –∏–∫–æ–Ω–∫–æ–π –∫–Ω–∏–≥–∏ —Ä—è–¥–æ–º —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∫–∞–∂–¥–æ–π
              —Å—Ç—Ä–∞–Ω–∏—Ü—ã!
            </p>
          </div>
        </div>

        <DialogFooter className="flex flex-col sm:flex-row gap-2">
          {onOpenInstructions ? (
            <>
              <Button
                variant="outline"
                onClick={handleClose}
                className="flex-1"
              >
                <X className="h-4 w-4 mr-2" />
                –ü–æ–Ω—è—Ç–Ω–æ
              </Button>
              <Button
                onClick={handleTryInstructions}
                className="flex-1 bg-gradient-to-r from-purple-500 to-blue-600 hover:from-purple-600 hover:to-blue-700"
              >
                <Book className="h-4 w-4 mr-2" />
                –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ {pageName}
              </Button>
            </>
          ) : (
            <Button
              onClick={handleClose}
              className="w-full bg-gradient-to-r from-purple-500 to-blue-600 hover:from-purple-600 hover:to-blue-700"
            >
              <Book className="h-4 w-4 mr-2" />
              –ü–æ–Ω—è—Ç–Ω–æ
            </Button>
          )}
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
